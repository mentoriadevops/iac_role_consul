---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: false
  vars_files:
    - ../../defaults/main.yml
  tasks:
    - name: roda o comando consul
      command: consul -version
      register: consul_version_output
    - name: verificar versao do consul
      assert:
        that:
        - consul_version_output.rc == 0
        - "'{{consul_version}}' in consul_version_output.stdout"

    - name: "Testes para o script de bootstrap"
      block:
        - name: "Executar o script de bootstrap como server"
          command: "/usr/local/bin/consul_bootstrap.sh server {{ bootstrap_expect }} '{{ retry_join }}' {{ datacenter }}"
          register: consul_boostrap_output
        - name: "Verificar que o script rodou com sucesso"
          assert:
            that:
              - consul_boostrap_output.rc == 0

        - name: "Ler conteúdo do arquivo de configuração que foi renderizado"
          slurp:
            src: "/etc/consul.d/consul.hcl"
          register: consul_bootstrap_config_file_content
        - name: "Verificar conteúdo do arquivo de configuração que foi renderizado"
          assert:
            that:
              # Verificando que a configuração de bootstrap_expect está correta.
              - "{{ bootstrap_expect_encontrado == bootstrap_expect_esperado }}"
              # Verificando que a configuração de datacenter está correta.
              - "{{ datacenter_encontrado == datacenter_esperado }}"
              # Verificando que a configuração de retry_join está correta.
              - "{{ retry_join_encontrado == retry_join_esperado }}"
          vars:
            bootstrap_expect_regex: '^bootstrap_expect\s+=\s+(.+)$'
            bootstrap_expect_encontrado: "{{
              consul_bootstrap_config_file_content['content'] |
              b64decode |
              regex_search(bootstrap_expect_regex, multiline=True)
            }}"
            bootstrap_expect_esperado: "{{ 'bootstrap_expect = %d' | format(bootstrap_expect) }}"
            datacenter_regex: '^datacenter\s+=\s+"(.+)"$'
            datacenter_encontrado: "{{
              consul_bootstrap_config_file_content['content'] |
              b64decode |
              regex_search(datacenter_regex, multiline=True)
            }}"
            datacenter_esperado: "{{ 'datacenter = \"%s\"' | format(datacenter) }}"
            retry_join_regex: '^retry_join\s+=\s+\[(.+)\]$'
            retry_join_encontrado: "{{
              consul_bootstrap_config_file_content['content'] |
              b64decode |
              regex_search(retry_join_regex, multiline=True)
            }}"
            retry_join_esperado: "{{ 'retry_join = [%s]' | format(retry_join) }}"
      vars:
        bootstrap_expect: 3
        datacenter: "dc2"
        retry_join: '"provider=gce project_name=mentoria-iac tag_value=consul", "127.0.0.1"'
